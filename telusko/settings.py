"""
Django settings for telusko project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
import psycopg2
from pathlib import Path
from dotenv import load_dotenv
import cloudinary
import dj_database_url
from decouple import config


# Load .env file
load_dotenv()

GEOIP_PATH = '/path/to/GeoIP/database/'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
CSRF_TRUSTED_ORIGINS = [
    'https://yotesafari.com',
    'http://localhost:8000',
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'aliwy-w)qwg1##ln(ig)j$s6oz#vp4zq4hm11ao$j9b!h6k*8x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
     'jazzmin', 
    'travello.apps.TravelloConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
       'cloudinary',
    'cloudinary_storage',
    "django_countries",

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # This one here

    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'telusko.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                "travello.context_processors.booking_form_processor",

            ],
        },
    },
]

WSGI_APPLICATION = 'telusko.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases




# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

#old database
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres', 
#         'USER': 'postgres.xmpfxagqwswvbakhwjbg',  
#         'PASSWORD': 'NyumbaChap', 
#         'HOST': 'aws-0-eu-central-1.pooler.supabase.com',  
#         'PORT': '5432',  
#     }
# }


#new database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres', 
        'USER': 'postgres.xfdsaxdhdavfchbdbohw',  
        'PASSWORD': 'Nyumbachap', 
        'HOST': 'aws-1-us-east-2.pooler.supabase.com',  
        'PORT': '5432',  
    }
}

# user=postgres.xfdsaxdhdavfchbdbohw 
# password=[YOUR-PASSWORD] 
# host=aws-1-us-east-2.pooler.supabase.com
# port=5432
# dbname=postgres
# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

# Lugha ya default
LANGUAGE_CODE = 'en-us'  # Hii inaweza kubaki kama English

# Muda wa Tanzania (East Africa Time)
TIME_ZONE = 'Africa/Dar_es_Salaam'

# Mipangilio ya Internationalization
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'assets')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Cloudinary settings
cloudinary.config(
    cloud_name=os.getenv('CLOUDINARY_CLOUD_NAME'),
    api_key=os.getenv('CLOUDINARY_API_KEY'),
    api_secret=os.getenv('CLOUDINARY_API_SECRET')
)

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': os.getenv('CLOUDINARY_CLOUD_NAME'),
    'API_KEY': os.getenv('CLOUDINARY_API_KEY'),
    'API_SECRET': os.getenv('CLOUDINARY_API_SECRET')
}

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
MEDIA_URL = f"https://res.cloudinary.com/{os.getenv('CLOUDINARY_CLOUD_NAME')}/"

# Default primary key field type





JAZZMIN_SETTINGS = {
    "site_title": "Yote Safari Site Admin",
    "site_header": "Yote Safari Dashboard",
    "welcome_sign": "Karibu kwenye Dashboard  Yote Safari",
    "copyright": "Â© 2025  YoteSafari Tanzania Advantures",
    "show_sidebar": True,
    "navigation_expanded": True,
    "user_avatar": None,
    "search_model": "auth.User",
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"model": "auth.User"},
        {"app": " Yote Safari Tanzania Advantures"},
    ],
}


JAZZMIN_UI_TWEAKS = {
    "theme": "darkly",
    "navbar_fixed": True,
    "sidebar_fixed": True,
    "footer_fixed": False,
    "show_ui_builder": True,
}



# Storage backend for production (WhiteNoise)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


UPLOADCARE = {
    'pub_key': '76122001cca4add87f02',
    'secret': 'f00801b9b65172d50de5',
}
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

